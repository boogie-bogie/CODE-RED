version: '3.8'
services:
  codered_web:
    build: .
    context: .
    dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    command: npm run test:ci
    depends_on:
      - codered_postgresql
      - codered_redis
    networks:
      - compose-networks

  codered_postgresql:
    build: ./postgisforDocker
    image: postgis/postgis
    restart: always
    container_name: codered_postgresql
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data
    networks:
      - compose-networks

  codered_redis:
    build: ./redisforDocker
    image: redis:latest
    container_name: codered_redis
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - compose-networks

networks:
  compose-networks:
    driver: bridge
